This method only works when the majority element does exist in the array.

Algorithm:

STEP 1:Iterate over the array once and find the candidate for majority element.
STEP 2: Check if this candidate is the majority element.

NOTE:-if majority element is present in array then candidate element is the only element in the array.
This technique will always return an element.

IMPLEMENTATION:
public int majorityElement(int[] nums) {
       
       /* STEP-1 if element is equal to previous element increase count else decrease count and it count reaches zero just update
       candidate to current element and make count 1 */
       int candidate=0,count=0;
        for(int i=0;i<nums.length;i++){
            if(count==0){
                candidate=nums[i];
                count=1;
            }
            else{
            if(candidate==nums[i])
                count++;
            else 
                count--;
        }}
        
        //STTEP:2 verify the candidate.
        int ans=0;
        for(int i=0;i<nums.length;i++){
            if(ans>nums.length/2)
                return candidate;
            if(nums[i]==candidate)
                ans++;
        }
        return candidate;
    }

TIME COMPLEXITY: O(n)
SPACE COMPLEXITY: O(1)

LINK:
Video-youtube.com/watch?v=zOyOwDEF1Rc
https://www.geeksforgeeks.org/majority-element/


